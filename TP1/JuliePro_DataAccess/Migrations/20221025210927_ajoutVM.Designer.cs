// <auto-generated />
using System;
using JuliePro_DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JuliePro_DataAccess.Migrations
{
    [DbContext(typeof(JulieProDbContext))]
    [Migration("20221025210927_ajoutVM")]
    partial class ajoutVM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JuliePro_DataModels.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ScheduledSession_Id")
                        .HasColumnType("int");

                    b.Property<double>("StartWeight")
                        .HasColumnType("float");

                    b.Property<int>("Trainer_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorEmail = "arthurLaroche@gmail.com",
                            BirthDate = new DateTime(1965, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Arthur",
                            LastName = "Laroche",
                            Photo = "",
                            ScheduledSession_Id = 3,
                            StartWeight = 0.0,
                            Trainer_Id = 3
                        },
                        new
                        {
                            Id = 2,
                            AuthorEmail = "DelimaCaillou@gmail.com",
                            BirthDate = new DateTime(1965, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Délima",
                            LastName = "Caillou",
                            Photo = "",
                            ScheduledSession_Id = 3,
                            StartWeight = 0.0,
                            Trainer_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorEmail = "fredcaillou@gmail.com",
                            BirthDate = new DateTime(1965, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Fred",
                            LastName = "Caillou",
                            Photo = "",
                            ScheduledSession_Id = 3,
                            StartWeight = 0.0,
                            Trainer_Id = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorEmail = "berthaLaroche@gmail.com",
                            BirthDate = new DateTime(1965, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bertha",
                            LastName = "Laroche",
                            Photo = "",
                            ScheduledSession_Id = 3,
                            StartWeight = 0.0,
                            Trainer_Id = 1
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "vélo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ensemble dumbels"
                        },
                        new
                        {
                            Id = 3,
                            Name = "tapis"
                        },
                        new
                        {
                            Id = 4,
                            Name = "step"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ensemble barre altère"
                        },
                        new
                        {
                            Id = 6,
                            Name = "bloc yoga"
                        },
                        new
                        {
                            Id = 7,
                            Name = "elastiques"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ballon d'exercice"
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AchievedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("float");

                    b.Property<double>("LostWeight")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Objectives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AchievedDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Customer_Id = 1,
                            DistanceKm = 0.0,
                            LostWeight = 5.0,
                            Name = ""
                        },
                        new
                        {
                            Id = 2,
                            AchievedDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Customer_Id = 1,
                            DistanceKm = 0.0,
                            LostWeight = 5.0,
                            Name = ""
                        },
                        new
                        {
                            Id = 3,
                            AchievedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Customer_Id = 1,
                            DistanceKm = 0.0,
                            LostWeight = 5.0,
                            Name = ""
                        },
                        new
                        {
                            Id = 4,
                            AchievedDate = new DateTime(2022, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Customer_Id = 2,
                            DistanceKm = 0.0,
                            LostWeight = 10.0,
                            Name = ""
                        },
                        new
                        {
                            Id = 5,
                            AchievedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Customer_Id = 2,
                            DistanceKm = 0.0,
                            LostWeight = 5.0,
                            Name = ""
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.ScheduledSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<int>("Training_Id")
                        .HasColumnType("int");

                    b.Property<bool>("WithTrainer")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ScheduledSessions");
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("Specialities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Perte de poids"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Course"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Althérophilie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Réhabilitation"
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biographie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Speciality_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Speciality_Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AuthorEmail = "Chrystal.lapierre@juliepro.ca",
                            Biographie = "Hola1",
                            FirstName = "Chrysal",
                            LastName = "Lappierre",
                            Photo = "8624af64-2685-459a-a1cc-816c0695d760.png",
                            Speciality_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AuthorEmail = "Felix.trudeau@juliePro.ca",
                            Biographie = "Hola2",
                            FirstName = "Félix",
                            LastName = "Trudeau",
                            Photo = "a202bae3-e6bb-40f0-84cf-e4b11627ba1c.png",
                            Speciality_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            AuthorEmail = "Frank.StJohn@juliepro.ca",
                            Biographie = "Hola3",
                            FirstName = "François",
                            LastName = "Saint-John",
                            Photo = "aedd9532-1395-42a2-8ae6-56f0e2ab49b5.png",
                            Speciality_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AuthorEmail = "JC.Bastien@juliepro.ca",
                            Biographie = "Hola4",
                            FirstName = "Jean-Claude",
                            LastName = "Bastien",
                            Photo = "d7bcc6d9-0599-42aa-8305-3c1ae5a4505c.png",
                            Speciality_Id = 4
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            AuthorEmail = "JinLee.godette@juliepro.ca",
                            Biographie = "Hola5",
                            FirstName = "Jin Lee",
                            LastName = "Godette",
                            Photo = "E3Rcc6d9-0599-42aa-8305-3c1ae5a4512v.png",
                            Speciality_Id = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            AuthorEmail = "Karine.Lachance@juliepro.ca",
                            Biographie = "Hola6",
                            FirstName = "Karine",
                            LastName = "Lachance",
                            Photo = "b333bae3-e6bb-40f0-84cf-e4b11627ba1c.png",
                            Speciality_Id = 2
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            AuthorEmail = "Ramone.Esteban@juliepro.ca",
                            Biographie = "Hola7",
                            FirstName = "Ramone",
                            LastName = "Esteban",
                            Photo = "waqd9532-1395-42a2-8ae6-56f0e2ab49e9.png",
                            Speciality_Id = 3
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "cardio",
                            Name = "step"
                        },
                        new
                        {
                            Id = 2,
                            Category = "étirement",
                            Name = "yoga"
                        },
                        new
                        {
                            Id = 3,
                            Category = "musculaire",
                            Name = "crossfit"
                        },
                        new
                        {
                            Id = 4,
                            Category = "cardio",
                            Name = "course"
                        },
                        new
                        {
                            Id = 5,
                            Category = "cardio",
                            Name = "zumba"
                        },
                        new
                        {
                            Id = 6,
                            Category = "musculaire",
                            Name = "spinning"
                        },
                        new
                        {
                            Id = 7,
                            Category = "étirement",
                            Name = "taichi"
                        });
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Trainer", b =>
                {
                    b.HasOne("JuliePro_DataModels.Entities.Speciality", "Speciality")
                        .WithMany("Trainers")
                        .HasForeignKey("Speciality_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("JuliePro_DataModels.Entities.Speciality", b =>
                {
                    b.Navigation("Trainers");
                });
#pragma warning restore 612, 618
        }
    }
}
